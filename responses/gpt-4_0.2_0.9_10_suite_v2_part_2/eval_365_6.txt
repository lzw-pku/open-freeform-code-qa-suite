The Maven Wrapper is a shell script used by Maven users to ensure a specific version of Maven is used on the developer's machine. For the Java version, it's not directly controlled by Maven or Maven Wrapper, but by the JAVA_HOME environment variable in your system.

If you want to specify a particular version of Java for your Maven project, you can use the `maven.compiler.source` and `maven.compiler.target` properties in your `pom.xml` file. Here is an example:

```xml
<properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
</properties>
```

This will ensure that your project is compiled with Java 8, regardless of the default Java version on your system.

However, if you want to use a specific version of Java for running Maven itself, you need to set the `JAVA_HOME` environment variable to point to the desired JDK before running the Maven Wrapper script. Here's how you can do it:

- On Unix-based systems (like Linux or Mac OS X), you can do this in the terminal:

```bash
export JAVA_HOME=/path/to/your/jdk
./mvnw clean install
```

- On Windows, you can do this in the command prompt:

```cmd
set JAVA_HOME=C:\path\to\your\jdk
mvnw.cmd clean install
```

Replace `/path/to/your/jdk` or `C:\path\to\your\jdk` with the actual path to the JDK you want to use.

Remember that this change will only affect the current terminal session. If you want to make it permanent, you need to set the `JAVA_HOME` environment variable in your system settings. The process for this varies depending on your operating system.