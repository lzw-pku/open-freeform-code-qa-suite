In a .NET 6 console application, you don't have the `WebApplication` class available. Instead, you can use the `ConfigurationBuilder` to read from your `appsettings.json` file.

Here's a simple example of how you can do this:

```csharp
using Microsoft.Extensions.Configuration;

class Program
{
    static void Main(string[] args)
    {
        var builder = new ConfigurationBuilder()
            .SetBasePath(Directory.GetCurrentDirectory())
            .AddJsonFile("appsettings.json", optional: true, reloadOnChange: true);

        IConfigurationRoot configuration = builder.Build();

        // Now you can access your settings.
        var mySetting = configuration.GetSection("MySetting").Value;
    }
}
```

In this example, you're creating a new `ConfigurationBuilder`, setting the base path to the current directory, and adding the `appsettings.json` file. The `optional` parameter specifies whether the file is optional, and `reloadOnChange` specifies that the configuration should be reloaded if the file changes.

You'll also need to add the following NuGet packages to your project:

- `Microsoft.Extensions.Configuration`
- `Microsoft.Extensions.Configuration.Json`
- `Microsoft.Extensions.Configuration.FileExtensions`

You can add these packages via the NuGet package manager in Visual Studio, or by running the following commands in your terminal:

```bash
dotnet add package Microsoft.Extensions.Configuration
dotnet add package Microsoft.Extensions.Configuration.Json
dotnet add package Microsoft.Extensions.Configuration.FileExtensions
```

Remember to include `using System.IO;` and `using Microsoft.Extensions.Configuration;` at the top of your `Program.cs` file.