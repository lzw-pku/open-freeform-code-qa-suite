Sure, here is a simple function in Go that converts an ASCII code into a string:

```go
package main

import (
	"fmt"
)

func getASCIIAsString(asciiCode uint64) {
    asciiChar := string(asciiCode)
    fmt.Println(asciiChar)
}

func main() {
    getASCIIAsString(65) // Output: A
}
```

In this function, we are using the `string()` function to convert the ASCII code into a string. The `fmt.Println()` function is then used to print the resulting string to the console.

Please note that this function will work correctly for ASCII codes that represent valid Unicode code points. If you pass an ASCII code that does not represent a valid Unicode code point, the `string()` function will return a string containing the Unicode replacement character (U+FFFD).