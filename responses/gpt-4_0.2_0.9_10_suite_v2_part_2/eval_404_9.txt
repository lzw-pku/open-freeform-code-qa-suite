In your code, you're wrapping the JSON result inside an `Ok()` method, which is unnecessary. The `Ok()` method already returns a status code of 200 and formats the response as JSON by default.

Here's how you can return JSON with a HTTP status code in your .NET Core Web API controller:

```csharp
public ActionResult IsAuthenticated()
{
    return Ok("123");
}
```

This will return a HTTP 200 status code with the body containing the string "123".

If you want to return a more complex object as JSON, you can do it like this:

```csharp
public ActionResult GetSomeData()
{
    var data = new { Name = "John", Age = 30 };
    return Ok(data);
}
```

This will return a HTTP 200 status code with the body containing the JSON representation of the `data` object:

```json
{
    "Name": "John",
    "Age": 30
}
```

If you want to return a different HTTP status code, you can use different methods like `BadRequest()`, `NotFound()`, etc., or you can use the `StatusCode()` method and specify the status code you want:

```csharp
public ActionResult SomeMethod()
{
    var data = new { Error = "Something went wrong" };
    return StatusCode(500, data);
}
```

This will return a HTTP 500 status code with the body containing the JSON representation of the `data` object:

```json
{
    "Error": "Something went wrong"
}
```