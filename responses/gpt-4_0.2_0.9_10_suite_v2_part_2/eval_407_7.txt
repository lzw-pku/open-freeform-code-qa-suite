In a console application, you don't have the `WebApplication` class available. Instead, you can use `ConfigurationBuilder` to read the `appsettings.json` file. Here's an example:

```csharp
using Microsoft.Extensions.Configuration;
using System.IO;

class Program
{
    static void Main(string[] args)
    {
        var builder = new ConfigurationBuilder()
            .SetBasePath(Directory.GetCurrentDirectory())
            .AddJsonFile("appsettings.json", optional: true, reloadOnChange: true);

        IConfigurationRoot configuration = builder.Build();

        // Now you can use configuration.GetSection or configuration.GetValue to read your settings
    }
}
```

In this example, `SetBasePath(Directory.GetCurrentDirectory())` sets the base path to the current directory. `AddJsonFile("appsettings.json", optional: true, reloadOnChange: true)` adds the `appsettings.json` file as a source of configuration settings. The `optional: true` parameter means that the application will not throw an exception if the file is not found. The `reloadOnChange: true` parameter means that the configuration will be reloaded if the `appsettings.json` file changes.

Then, `configuration.GetSection` or `configuration.GetValue` can be used to read your settings.

Remember to install the `Microsoft.Extensions.Configuration` and `Microsoft.Extensions.Configuration.Json` NuGet packages to your project.