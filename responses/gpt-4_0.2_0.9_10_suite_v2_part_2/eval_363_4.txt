The error message is indicating that the Spring Cloud Config Client is active in your application, and it's trying to connect to a Config Server, but the `spring.config.import` property is not set.

Even though you mentioned that you're not using Config Server and the Config Client is commented out, the error indicates that the Config Client is still active. This could be due to a transitive dependency or an auto-configuration that's enabling it.

To fix this issue, you can try the following steps:

1. Exclude the Config Client from your dependencies. You can do this by excluding it from the Spring Cloud Starter dependency:

```groovy
implementation('org.springframework.cloud:spring-cloud-starter') {
    exclude module: 'spring-cloud-starter-config'
}
```

2. If the above step doesn't work, you can explicitly disable the Config Client in your application properties or YAML file:

```properties
spring.cloud.config.enabled=false
```

Or in your test configuration:

```java
@SpringBootTest(
    webEnvironment = WebEnvironment.RANDOM_PORT,
    classes = {
        ProductCompositeServiceApplication.class,
        TestSecurityConfig.class },
    properties = {
        "spring.main.allow-bean-definition-overriding=true",
        "spring.cloud.config.enabled=false" })
```

3. If none of the above steps work, you might need to investigate further to see why the Config Client is still active. You can start by checking your dependencies with the `gradle dependencies` command to see if there's a transitive dependency that's pulling in the Config Client.