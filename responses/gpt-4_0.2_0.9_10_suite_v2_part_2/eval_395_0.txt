You can't directly register a generic interface without specifying the type. However, you can register all implementations of the generic interface in your assembly like this:

```c#
foreach (var type in Assembly.GetExecutingAssembly().GetTypes())
{
    if (type.IsClass && !type.IsAbstract && type.IsPublic)
    {
        var interfaceType = type.GetInterfaces().FirstOrDefault(i => i.IsGenericType && i.GetGenericTypeDefinition() == typeof(IDatabaseService<>));
        if (interfaceType != null)
        {
            services.AddScoped(interfaceType, type);
        }
    }
}
```

This code will scan all public, non-abstract classes in the executing assembly, check if they implement `IDatabaseService<T>` for some `T`, and if they do, it will register them with the DI container.