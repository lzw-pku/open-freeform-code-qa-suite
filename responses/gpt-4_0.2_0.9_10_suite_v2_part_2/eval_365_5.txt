It seems like you want to use a specific version of Java with Maven Wrapper in your build process. If you are using a build system like Jenkins or a CI/CD tool like GitHub Actions or GitLab CI/CD, you can specify the Java version in the configuration.

However, if you want to specify the Java version for Maven Wrapper in your local development environment, you can do so by setting the `JAVA_HOME` environment variable to point to the JDK installation directory that you want to use.

Here's how you can do it:

1. Find out where your desired JDK is installed. It's usually in a location like `/usr/lib/jvm/java-11-openjdk-amd64/` on Linux, `C:\Program Files\Java\jdk-11.0.1` on Windows, or `/Library/Java/JavaVirtualMachines/jdk-11.0.1.jdk/Contents/Home` on macOS.

2. Set the `JAVA_HOME` environment variable to point to this location. 

On Linux or macOS, you can add this line to your `~/.bashrc` or `~/.zshrc` file:

```bash
export JAVA_HOME=/path/to/your/jdk
```

On Windows, you can set this via the System Properties:

- Right-click on 'Computer' on the Desktop or in the Start menu.
- Choose 'Properties'.
- Click 'Advanced system settings'.
- Click 'Environment Variables'.
- Click 'New' under System variables.
- Enter `JAVA_HOME` as the variable name and the path to your JDK installation as the variable value.
- Click 'OK' and restart your computer.

3. Now, when you run the Maven Wrapper with `./mvnw` or `mvnw.cmd`, it should use the specified JDK.

Remember to replace `/path/to/your/jdk` with the actual path to your JDK installation. If you have multiple JDKs installed and want to switch between them, you can do so by changing the `JAVA_HOME` variable.