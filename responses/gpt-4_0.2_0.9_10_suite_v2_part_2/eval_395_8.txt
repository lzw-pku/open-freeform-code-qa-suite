You cannot directly register a generic interface without specifying the type. However, you can register all implementations of a generic interface in your assembly. Here's how you can do it:

```c#
foreach (var type in Assembly.GetExecutingAssembly().GetTypes())
{
    if (type.IsClass && !type.IsAbstract && type.IsPublic)
    {
        var interfaces = type.GetInterfaces();
        foreach (var @interface in interfaces)
        {
            if (@interface.IsGenericType && @interface.GetGenericTypeDefinition() == typeof(IDatabaseService<>))
            {
                services.AddScoped(@interface, type);
            }
        }
    }
}
```

This code will scan all public, non-abstract classes in your assembly, and if they implement `IDatabaseService<T>`, it will register them with the DI container.