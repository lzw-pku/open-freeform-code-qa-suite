In a .NET 6 console application, you don't have the `WebApplication` class available. Instead, you can manually create a configuration builder and load the `appsettings.json` file.

Here's how you can do it:

```csharp
using Microsoft.Extensions.Configuration;

class Program
{
    static void Main(string[] args)
    {
        var builder = new ConfigurationBuilder()
            .SetBasePath(Directory.GetCurrentDirectory())
            .AddJsonFile("appsettings.json", optional: true, reloadOnChange: true);

        IConfigurationRoot configuration = builder.Build();

        // Now you can use the configuration object to get your settings
        var mySetting = configuration.GetSection("MySetting").Value;
    }
}
```

In this code, we're creating a new `ConfigurationBuilder`, setting the base path to the current directory, and adding the `appsettings.json` file to the configuration sources. The `optional` parameter indicates whether the file is optional, and `reloadOnChange` indicates whether the configuration should be reloaded if the file changes.

Remember to add the `Microsoft.Extensions.Configuration.Json` NuGet package to your project to be able to use the `AddJsonFile` extension method.

Also, don't forget to include `System.IO` namespace for `Directory.GetCurrentDirectory()` method.

```csharp
using System.IO;
```