Here's the implementation of the `getASCIIAsString` function in Go:

```go
func getASCIIAsString(asciiCode uint64) string {
    return string(asciiCode)
}
```

This function takes an `uint64` ASCII code as input and returns the corresponding ASCII string. The `string` function in Go converts a sequence of bytes to a string, and since ASCII codes are represented as bytes, we can simply cast the `uint64` value to a `string` value.

Here's an example usage of the `getASCIIAsString` function:

```go
asciiCode := uint64(65)
asciiString := getASCIIAsString(asciiCode)
fmt.Println(asciiString) // Output: A
```

In this example, we pass the ASCII code for the letter 'A' (which is 65) to the `getASCIIAsString` function, and it returns the corresponding ASCII string 'A'.