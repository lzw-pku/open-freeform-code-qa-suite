There are a few things you can check to troubleshoot this issue:

1. Make sure that the `@EnableSwagger2WebMvc` annotation is present in your Spring Boot application class. This annotation enables Swagger support for your application.

2. Check that the `@ComponentScan` annotation is present in your Spring Boot application class. This annotation scans the package where your controllers are located.

3. Verify that the `springdoc.swagger-ui.path` property is not set to a different value in your `application.properties` file. By default, the path is `/swagger-ui.html`.

4. Check that the `@RestController` annotation is present in your controller class. This annotation is required for Swagger to generate the API documentation.

5. Verify that the `@ApiOperation` annotation is present in your controller methods. This annotation provides information about the operation that Swagger uses to generate the API documentation.

If none of these solutions work, you can try to add the following configuration class to your project:

```java
@Configuration
public class SwaggerConfig {

    @Bean
    public OpenAPI customOpenAPI() {
        return new OpenAPI()
                .components(new Components())
                .info(new Info().title("Your API Title").description(
                        "Your API Description").version("1.0.0"));
    }
}
```

This class creates a custom OpenAPI object that Swagger uses to generate the API documentation. Make sure to replace the title, description, and version with your own values.