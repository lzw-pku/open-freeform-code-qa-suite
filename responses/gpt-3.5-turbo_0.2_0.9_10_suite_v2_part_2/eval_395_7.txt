You can use an open generic type and specify the concrete type when registering the service. Here's an example:
```c#
services.AddScoped(typeof(IDatabaseService<>), typeof(DatabaseService<>));
```
This registers `DatabaseService<T>` as the implementation for `IDatabaseService<T>`. Then, when you want to use it, you can specify the concrete type like this:
```c#
IDatabaseService<MyModel> service = serviceProvider.GetService<IDatabaseService<MyModel>>();
```