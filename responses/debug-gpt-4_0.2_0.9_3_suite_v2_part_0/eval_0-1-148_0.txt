Sure, you can use the `last:` variant provided by Tailwind CSS to target the last element in a list. Here's how you can modify your code:

```html
  <ul>
    <li
      v-for="(item, index) in items"
      :key="`item-${index}`"
      :class="{ 'border-b border-black': index !== items.length - 1 }"
      class="border-solid"
    >
      Item
    </li>
  </ul>
```

In this code, we're using Vue's dynamic class binding (`:class`) to conditionally apply the `border-b border-black` classes. The condition `index !== items.length - 1` checks if the current item is not the last one in the list. If it's not, the classes are applied, giving it a bottom border. If it is the last item, the classes are not applied, so it won't have a bottom border.

Please note that you need to have the `last` variant enabled in your Tailwind CSS configuration for this to work. You can do this by adding it to the `variants` section in your `tailwind.config.js` file:

```javascript
module.exports = {
  variants: {
    extend: {
      borderColor: ['last'],
    },
  },
  // ...
}
```

This tells Tailwind to generate `last:` variants for the `borderColor` utilities.