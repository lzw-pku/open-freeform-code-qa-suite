First way:

In the first way, you can use the `tabBarVisible` option to hide the tab bar. Set it to `false` to hide the tab bar when the Settings screen is active.

```javascript
export default function App() {
  return (
    <NavigationContainer>
      <Tab.Navigator>
        <Tab.Screen name="Home" component={ProfileStackScreen} />
        <Tab.Screen options={{ tabBarVisible: false }} name="Settings" component={SettingsStackScreen} />
      </Tab.Navigator>
    </NavigationContainer>
  );
}
```

Second way:

In the second way, you can use the `setOptions` method of the `navigation` prop to dynamically change the navigation options. You can call this method in a `React.useEffect` hook to set the `tabBarVisible` option to `false` when the Settings screen is mounted.

```javascript
function SettingsStackScreen({ navigation }) {
    React.useEffect(() => {
        navigation.setOptions({ tabBarVisible: false });
    }, [navigation]);
    return (
        <SettingsStack.Navigator>
            <SettingsStack.Screen name="Settings" component={SettingsScreen} />
        </SettingsStack.Navigator>
    )
}
```

Please note that hiding the tab bar will not prevent the user from navigating to the Settings screen by other means, such as using the back button or swiping from the edge of the screen.