Sure, I can help you refactor the code. The main issue with your current code is that you're defining the `TabWrapper` styled component inside the `Tab` component. This means a new `TabWrapper` is created every time `Tab` is rendered, which is inefficient. 

Instead, you should define `TabWrapper` outside of the `Tab` component, and pass `isSelected` as a prop to `TabWrapper`. Here's how you can do it:

```javascript
import React from 'react'
import styled from 'styled-components'

// start
const TabWrapper = styled.li`
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 100px;
  margin: 1px;
  font-size: 3em;
  color: ${props => (props.isSelected ? `white` : `black`)};
  background-color: ${props => (props.isSelected ? `black` : `#C4C4C4`)};
  cursor: ${props => (props.isSelected ? 'default' : `pointer`)};
`
// end

const Tab = ({ onClick, isSelected, children }) => {
  return <TabWrapper onClick={onClick} isSelected={isSelected}>{children}</TabWrapper>
}

export default Tab
```

In this refactored code, `TabWrapper` is only created once, and `isSelected` is passed as a prop to it. This should improve the efficiency of your code.