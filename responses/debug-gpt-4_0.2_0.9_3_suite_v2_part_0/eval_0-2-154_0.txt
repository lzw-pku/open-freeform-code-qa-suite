Sure, here is the function you requested:

```javascript
function* iterLeafNodes(strhtml, format=[]) {
  const parser = new DOMParser();
  const doc = parser.parseFromString(strhtml, 'text/html');
  const body = doc.body;

  function* walk(node, format=[]) {
    if (node.nodeType === Node.TEXT_NODE) {
      yield { text: node.textContent, format };
    } else if (node.nodeType === Node.ELEMENT_NODE) {
      format = [...format, node.tagName.toLowerCase()];
      for (const child of node.childNodes) {
        yield* walk(child, format);
      }
    }
  }

  for (const child of body.childNodes) {
    yield* walk(child);
  }
}
```

This function uses a generator to yield each text node in the HTML string, along with its formatting. It uses recursion to handle nested tags. The `format` parameter is an array that keeps track of the current formatting context as the function traverses the DOM tree.